<Project>

<!-- https://github.com/microsoft/msbuild/pull/2014 -->
<ItemGroup>
    <PackageReference Include="GitInfo" Version="2.1.2">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
</ItemGroup>

<PropertyGroup>
    <BuildDependsOn>WriteVersionToFile;$(BuildDependsOn)</BuildDependsOn>
    <GenerateNuspecDependsOn>WriteVersionToFile;$(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>
        <!-- <PrepareForBuildDependsOn>WriteVersionToFile;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn> -->
    <!-- <GetPackageVersionDependsOn>WriteVersionToFile;$(GetPackageVersionDependsOn)</GetPackageVersionDependsOn> -->

</PropertyGroup>

<Target
  Name="SetCustomVersions"
  DependsOnTargets="GitVersion"
  Returns="$(Version)"
  Condition="'$(GitInfoImported)' == 'true' ">
  </Target>


 <Target Name="WriteVersionToFile"  DependsOnTargets="SetCustomVersions" >
     <PropertyGroup>
        <PackageProjectUrl>$(GitRepositoryUrl)</PackageProjectUrl>
        <RepositoryUrl>$(GitRepositoryUrl)</RepositoryUrl>
        <PackageReleaseNotes>$(GitRepositoryUrl)/blob/master/CHANGELOG.md</PackageReleaseNotes>
        <RepositoryCommit>$(GitCommit)</RepositoryCommit>
        <RepositoryBranch>$(GitBranch)</RepositoryBranch>
        <AssemblyVersion>$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)</AssemblyVersion>
        <PackageVersion>$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)</PackageVersion>
        <Version>$(PackageVersion)</Version>
        <FileVersion>$(PackageVersion)</FileVersion>
        <InformationalVersion>$(PackageVersion)</InformationalVersion>
    </PropertyGroup>

    <PropertyGroup>
      <VersionJson>{
        &quot;GitBaseVersion&quot;:      &quot;$(GitBaseVersion)&quot;,
        &quot;GitSemVersion&quot;:      &quot;$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)&quot;,
        &quot;GitCommits&quot;:      &quot;$(GitCommits)&quot;,
        &quot;GitCommitDate&quot;:      &quot;$(GitCommitDate)&quot;,
        &quot;GitBaseVersionMajor&quot;:      &quot;$(GitBaseVersionMajor)&quot;,
        &quot;GitBaseVersionMinor&quot;:      &quot;$(GitBaseVersionMinor)&quot;,
        &quot;GitBaseVersionPatch&quot;:      &quot;$(GitBaseVersionPatch)&quot;,
        &quot;GitSemVerMajor&quot;:      &quot;$(GitSemVerMajor)&quot;,
        &quot;GitSemVerMinor&quot;:      &quot;$(GitSemVerMinor)&quot;,
        &quot;GitSemVerPatch&quot;:      &quot;$(GitSemVerPatch)&quot;,
        &quot;AssemblyVersion&quot;:         &quot;$(AssemblyVersion)&quot;,
        &quot;FileVersion&quot;:             &quot;$(FileVersion)&quot;,
        &quot;InformationalVersion&quot;:    &quot;$(InformationalVersion)&quot;,
        &quot;PackageVersion&quot;:          &quot;$(PackageVersion)&quot;,
        &quot;Version&quot;:         &quot;$(Version)&quot;,
        &quot;VersionPrefix&quot;: &quot;$(VersionPrefix)&quot;,
        &quot;VersionSuffix&quot;:  &quot;$(VersionSuffix)&quot;,
        &quot;SemVerDashLabel &quot;: &quot;$(GitSemVerDashLabel)&quot;,
        &quot;GitTag &quot;: &quot;$(GitTag)&quot;,
        &quot;GitBaseTag &quot;: &quot;$(GitBaseTag)&quot;,
        &quot;GitIsDirty &quot;: &quot;$(GitIsDirty)&quot;,
        &quot;PackageProjectUrl&quot;:      &quot;$(GitRepositoryUrl)&quot;,
        &quot;RepositoryUrl&quot;:      &quot;$(GitRepositoryUrl)&quot;,
        &quot;PackageReleaseNotes&quot;:      &quot;$(GitRepositoryUrl)/blob/master/CHANGELOG.md&quot;,
        &quot;RepositoryCommit&quot;:      &quot;$(GitCommit)&quot;,
        &quot;RepositoryBranch&quot;:      &quot;$(GitBranch)&quot;
}
      </VersionJson>
    </PropertyGroup>


    <WriteLinesToFile
          Overwrite="true"
          Lines="$(VersionJson)"
          File="$(RepoArtifactsRootPath)build.version.json"
          ContinueOnError="false"/>
    </Target>

</Project>
